{
  "name": "task-genie",
  "version": "0.1.0",
  "bin": {
    "task-genie": "bin/task-genie.js"
  },
  "scripts": {
    "build": "tsc",
    "build-all": "find ./../backend/lambda -mindepth 2 -maxdepth 2 -type f -name 'package.json' -exec echo 'ðŸš§ Building {}' ; -execdir sh -c 'npm run build' ; && find ./../backend/services -mindepth 1 -maxdepth 1 -type f -name 'package.json' -exec echo 'ðŸš§ Building {}' ; -execdir sh -c 'npm run build' ;",
    "deploy": "npm run build-all && echo 'ðŸš€ Deploying backend' && npm run cdk -- deploy --all --require-approval=never --profile task-genie-stage --context envName=stage",
    "deploy-prod": "npm run build-all && echo 'ðŸš€ Deploying backend' && npm run cdk -- deploy --all --require-approval=never --profile task-genie-prod --context envName=prod",
    "install-all": "npm run install-lambda && npm run install-services",
    "install-lambda": "find ./../backend/lambda -mindepth 2 -maxdepth 2 -type f -name 'package.json' -exec echo 'ðŸ’¾ Installing {}' ; -execdir sh -c 'npm install' ;",
    "install-services": "find ./../backend/services -mindepth 1 -maxdepth 1 -type f -name 'package.json' -exec echo 'ðŸ’¾ Installing {}' ; -execdir sh -c 'npm install' ;",
    "watch": "tsc -w",
    "test": "jest",
    "cdk": "cdk"
  },
  "devDependencies": {
    "@types/jest": "^29.5.14",
    "@types/node": "22.7.9",
    "aws-cdk": "2.177.0",
    "jest": "^29.7.0",
    "ts-jest": "^29.3.0",
    "ts-node": "^10.9.2",
    "typescript": "~5.6.3"
  },
  "dependencies": {
    "aws-cdk-lib": "2.177.0",
    "constructs": "^10.0.0",
    "dotenv": "^16.4.7"
  },
  "resolutions": {
    "@smithy/core": "latest"
  }
}
